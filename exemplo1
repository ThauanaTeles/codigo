
const Client = ({ onChange }) => (
  <SelectClient onChange={onChange} />
);


const GerarBoletos = ({ title }) => {

  const handleOnSubmit = (values, actions) => {

    const Id = '9029c83f2a704b128619f78cb6ec83ad';

    const postValues = { ...values };

    const SemMaskMoney = JSON.stringify(values.Amount).replace('.', '');

    const semDataVencimento = values.PaymentMethodExpirationDate.split('/').reverse().join('-');

    postValues.Amount = SemMaskMoney;

    postValues.OnBehalfOf = Id;

    postValues.PaymentMethodExpirationDate = `${semDataVencimento}T00:00:00`;

    setTimeout(() => {
      // console.log(JSON.stringify(postValues, null, 2));
      actions.setSubmitting(false);
    }, 1000);
    axios.post('http://localhost:5000/api/boleto/', { ...postValues })
      .then((response) => {
        console.log(response);
      })
      .catch((error) => {
        console.log(error);
      });
  };

  return (
    <Formik

      onSubmit={(values, actions) => handleOnSubmit(values, actions)}

      initialValues={initialValues}

      validationSchema={validationSchema}

    >{(formik, setFieldValue, values) => (
        <Form>
          <Card small className="mb-4">
            <CardHeader className="border-bottom">
              <h6 className="m-0">{title}</h6>
            </CardHeader>
            <ListGroup flush>
              <ListGroupItem className="p-3">
                <Row>
                  <Col>
                    <Row form>
                      <Client onChange={formik.setFieldValue} value={formik.values.Customer} required />
                      <Col md="4" className="form-group">
                        <label id="input"> Valor: </label>
                        <Field name="Amount">
                          {({ field }) => <CurrencyInput name="Amount" className="form-control" onChange={formik.handleChange} />}
                        </Field>
                      </Col>
                      <Col md="4" className="form-group">
                        <label id="input"> Data de vencimento: </label>
                        <DatePicker
                          locale={pt}
                          selected={formik.values.PaymentMethodExpirationDate}
                          dateFormat="d MMMM, yyyy"
                          className="form-control"
                          name="PaymentMethodExpirationDate"
                          onChange={date => formik.setFieldValue('PaymentMethodExpirationDate', date)}
                        />
                      </Col>
                    </Row>
                    <Row form>
                      <CustomInput name="Description" label="Descrição:" md="12" />
                    </Row>
                    <Button type="submit" theme="accent" id="gerar-boleto" disabled={formik.isSubmitting}>
                      {' '}
                      <i className="fas fa-barcode" />
                      {' '}
                      Gerar
                      {' '}
                    </Button>
                  </Col>
                </Row>
              </ListGroupItem>
            </ListGroup>
          </Card>
        </Form>
      )}
    </Formik>
  );
};


export default GerarBoletos;
